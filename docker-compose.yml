version: "3.7"

services:
  cache:
    image: redis:6.2-alpine
    container_name: n8n_cache
    restart: always
    ports:
      - 6379:6379
    command: redis-server --save 20 1 --loglevel warning --requirepass ${REDIS_PASSWORD}
    volumes:
      - cache:/data

  n8n:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: n8n_app
    restart: unless-stopped
    ports:
      - "127.0.0.1:5678:5678"
    labels:
      - traefik.enable=false
    environment:
      - N8N_HOST=${N8N_HOST}
      - N8N_PORT=5678
      - N8N_PROTOCOL=https
      - NODE_ENV=production
      - WEBHOOK_URL=${WEBHOOK_URL}
      - GENERIC_TIMEZONE=${GENERIC_TIMEZONE}
      - N8N_LOG_LEVEL=${N8N_LOG_LEVEL}
      - NODE_FUNCTION_ALLOW_BUILTIN=*

      - EXECUTIONS_DATA_PRUNE=true
      - EXECUTIONS_DATA_MAX_AGE=336 # 2 Weeks
      - EXECUTIONS_DATA_PRUNE_MAX_COUNT=60000

      - NODE_OPTIONS=--max_old_space_size=8192
      - NODE_FUNCTION_ALLOW_EXTERNAL=liquidjs

      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=n8n-db
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=n8n
      - DB_POSTGRESDB_USER=n8n
      - DB_POSTGRESDB_PASSWORD=${DB_POSTGRESDB_PASSWORD}

      - N8N_ENCRYPTION_KEY=${N8N_ENCRYPTION_KEY}
    volumes:
      - n8n_storage:/home/node/.n8n
      - ./n8n-local-files:/files
    depends_on:
      n8n-db:
        condition: service_healthy

  n8n-db:
    container_name: n8n_db
    image: postgres:16.4
    volumes:
      - n8n_data_pg:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=n8n
      - POSTGRES_PASSWORD=${DB_POSTGRESDB_PASSWORD}
      - POSTGRES_DB=n8n
    restart: unless-stopped
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -h localhost -U n8n -d n8n']
      interval: 5s
      timeout: 5s
      retries: 10

volumes:
  n8n_data_pg:
  n8n_storage:
  cache: